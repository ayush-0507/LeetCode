class Solution {
    static ListNode reverse(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode newHead = reverse(head.next);
        head.next.next = head;
        head.next = null;
        return newHead;
    }

    public boolean isPalindrome(ListNode head) {
        ListNode slow = head;
        ListNode fast = head;
        while (fast != null && fast.next != null) {
            slow = slow.next;
            fast = fast.next.next;
        }
        ListNode reversed = reverse(slow);
        ListNode current = head;
        while (reversed != null) {
            if (current.val != reversed.val) {
                return false;
            }
            current = current.next;
            reversed = reversed.next;
        }
        return true;
    }
}
